
@import "_mixin";
@import "progress";

$opacity-grey-min: 0.3;
$opacity-grey-middle: 0.7;
$opacity-grey-max: 1;


// fixme имя файла должно быть player.scss
.b_player {
  position: fixed;
  width: auto;
  height: 70px;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 2;
}
.inner_player {
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: #fff;

  border-top: 1px solid rgb(237, 237, 237) ;
  box-shadow: 0 0 7px rgb(195, 195, 195);

  button {
    border: none;
    cursor: pointer;
  }

  a {
    text-decoration: none;
    cursor: pointer;
    color: black;
  }
  // fixme выносим в отдельный блок b_player_controls
  .d_flex_center, button {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .w_h_25 {
    width: 25px !important;
    height: 25px !important;
  }

  .w_h_20 {
    width: 20px !important;
    height: 20px !important;
  }

  .b_btns_play {
    width: 170px;

    .play {
      button {
        background-color: #f3f3f3;
        border-radius: 50%;

        &:hover {
          background-color: #d7eaff;
        }

        // fixme обычно используют тег i (типа icon) а не span,
        //  а здесь так как текста на кнопке нет можно вообще ни чего не использоваться просто background-image по центру c background-position
        span {
          background-image: url("/assets/img/btn_play/play.svg");
        }
      }
    }

    .next {
      button{
        span {
          background-image: url("/assets/img/btn_play/next.svg");

          &:hover {
            opacity: $opacity-grey-middle;
          }
        }
      }
    }

    .prev {
      button{
        span {
          background-image: url("/assets/img/btn_play/previous.svg");

          &:hover {
            opacity: $opacity-grey-middle;
          }
        }
      }
    }

  }
  // fixme заведи класс .btn для этого
  .element_min_player  {
    width: 40px;
    height: 40px;
    min-width: 40px;

    button {
      background-color: white;
      width: 100%;
      height: 100%;
    }

    span {
      width: 16px;
      height: 16px;
      background-repeat: no-repeat;
    }
  }

  // fixme выносим в отдельный блок b_player_playlist_order
  .b_shuffle {
    .shuffle {
      button{
        span {
          background-image: url("/assets/img/shuffle.svg");
          opacity: $opacity-grey-min;

          // fixme к сожалению так не пойдет, нужно заменить на прозрачность css opacity везде где hover
          &:hover {
            opacity: $opacity-grey-middle;
          }
        }
      }
    }

    .repeat_playlist {
      button{
        span {
          background-image: url("/assets/img/repeat.svg");
          opacity: $opacity-grey-min;

          &:hover {
            opacity: $opacity-grey-middle;
          }
        }
      }
    }
  }

  // fixme выносим в отдельный блок b_player_playlist
  .playlist {
    button{
      span {
        background-image: url("/assets/img/playlist.svg");
        opacity: $opacity-grey-middle;

        &:hover {
          opacity: $opacity-grey-max;
        }
      }
    }

  }
  // fixme убираем у нас нету этого пока и будет очень не скоро если будет вообще
  .popup {
    position: absolute;
    transform: translate(30%, -100%);
    width: 900px;
    height: calc(-156px + 100vh);
    background-color: #fff;
    border: 1px solid #e3e3e3;
    opacity: 1;
    z-index: -1;
    top: 15px;
    padding-bottom: 15px;
    transition-duration: .35s;
    transition-property: height;
  }

  .b_hq {
    .hq {
      button{
        span {
          background-image: url("/assets/img/hq.svg");
          opacity: $opacity-grey-middle;
        }
      }
    }

    .equalizer {
      button{
        span {
          background-image: url("/assets/img/equalizer.svg");
          opacity: $opacity-grey-middle;
        }
      }
    }
  }



  // fixme выносим в отдельный блок b_player_like
  .like {
    button{
      span {
        background-image: url("/assets/img/like.svg");
        opacity: $opacity-grey-middle;

        &:hover {
          opacity: $opacity-grey-max;
        }
      }
    }
  }

  // fixme выносим в отдельный блок b_player_download
  .download {
      a {
        width: 26px;
        height: 26px;
        border-radius: 5px;
        background-color: #f7f7f7;

        &:hover {
          background-color: #d7eaff;
        }

        span {
          display: flex;
          width: 13px;
          height: 13px;
          background-image: url("/assets/img/download.svg");
        }
      }
  }

  // fixme удаляем нету
  .options {
    button{
      span {
        background-image: url("/assets/img/options.svg");
        opacity: $opacity-grey-middle;

        &:hover {
          opacity: $opacity-grey-max;
        }
      }
    }
  }
  // fixme выносим в отдельный блок b_player_volume
  .b_volume {
    width: fit-content;

    .volume_inner {
      background-color: white;
      width: 40px;
      height: 100%;

      span {
        background-image: url("/assets/img/volume.svg");
      }
    }
  }

  .b_info {
    width: fit-content;
    height: 100%;

    .artist_img {
      border-radius: 50%;
      background-color: #f7f7f7;
      margin-right: 10px;

      span {
        width: 20px;
        height: 20px;
        display: flex;
        opacity: $opacity-grey-min;
        background-image: url("/assets/img/note.svg");
      }
    }

    .names {
      display: flex;
      flex-direction: column;

      .artist_name, .song_name {
        display: flex;
        align-items: center;
        justify-content: start;
        width: 100%;
        height: 100%;
      }

      .artist_name {
        font-weight: bold;

        a {
          margin-right: 5px;
        }
      }
    }
  }
}